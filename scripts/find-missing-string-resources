#!/bin/bash
#
# Primitive helper script, scanning for occurences of @string/_<foobar> and R.string._<foobar>, 
# which are translatable strings in RxDroid. All values not defined in res/values/strings.xml will
# be echoed in copy-'n-pastable XML. 
#

patterns="@string/_\w* R.string._\w*"
temp=$(mktemp -t foobar)


scan_file()
{
	for p in $patterns; do
		for t in $(grep -o -P $p $1 | grep -o -P '_\w*'); do
			echo $t >> $temp
		done
	done

}

scan_dir()
{
	for f in $1/*.{java,xml}; do
		if [[ -f "$f" ]]; then
			scan_file $f
		fi
	done

	for d in $1/*; do
		if [[ -d "$d" ]]; then
			scan_dir "$d"
		fi
	done
}

scan_string_xml()
{
	for f in res/values*/strings.xml; do
		echo "-- $f:"

		for t in $(cat $temp | sort | uniq); do
			if [[ "$(dirname $f)" != "values" ]]; then
				if ! grep -q $t "res/values/strings.xml" && grep -q $t "$f"; then
					echo "!!! Resource R.string.$t exists in $f but not in res/values/strings.xml" >&2
					echo "!!! This is known to cause exceptions in Context.getString()" >&2
					echo "!!! t=$t, f=$f, temp=$temp"
					echo "!!! Affected files: "

					grep --include=*.{xml,java} -R -l "$t" src res | grep -v "$f"

					exit 1
				fi
			fi

			if ! grep -q $t $f; then
				echo "<string name=\"$t\"> !!EMPTY!! </string>"
			fi
		done

		echo
	done
}

scan_dir src
scan_dir res

scan_string_xml

rm $temp
